<?xml version="1.0" encoding="UTF-8"?>
<!--
    This build file contains common targets for handling revision control
    system tasks.

    General markup guidelines:
      - Targets starting with "-" are protected and should never be called
        directly.
      - Targets starting with "~" are hooks that can be overwritten to custom
        functionality.

      - Properties names containing "-" are parameters and they should be
        supplied by using ant's <param /> tag.
      - Properties names containing "." are global properties that are defined
        in a *.properties file or in a build file.
-->
<project name="common-ant-targets" basedir=".">

    <!--
        Declare basedir for commons
    -->
    <dirname property="common-ant-targets.basedir" file="${ant.file.common-ant-targets}" />

    <!--
        Import default properties. You should customize this properties in your
        own build environment.
    -->
    <property file="${common-ant-targets.basedir}/build-commons.properties" />

    <!--
        Import commons build files
    -->
    <import file="build-commons-rcs.xml" />
    <import file="build-commons-pear.xml" />
    <import file="verify.xml" />

    <!--
        Some common settings for all project.
    -->
    <property name="builddir" location="${basedir}/../build" />
    <property name="distdir" location="${builddir}/dist" />
    <property name="logsdir" location="${builddir}/logs" />
    <property name="scriptdir" location="${common-ant-targets.basedir}/scripts" />
    <property name="tmpdir" location="${builddir}/tmp" />

    <!--
        Common build variables
    -->
    <tstamp>
        <format property="build.date" pattern="yyyy-MM-dd" />
    </tstamp>
<!--
    <target name="dist-continuous-integration" 
            depends="init-continuous-integration-properties, dist"
            description="Continuous integration distribution build" />

    <target name="init-continuous-integration-properties">
        <buildnumber file="build.number" />

        <property name="build.version" value="${project.version}build${build.number}" />
        <property name="build.name" value="${project.name}" />
        <property name="build.file" value="${build.name}-${build.version}" />
    </target>
-->
    <target name="dist" depends="build,package,tag" description="-> Default distribution build" />

    <target name="init-properties" unless="build.version">
        <property name="build.version" value="${project.version}" />
        <property name="build.name" value="${project.name}" />
        <property name="build.file" value="${build.name}-${build.version}" />
    </target>

    <target name="clean">
        <delete dir="${builddir}" includeemptydirs="true" />
    </target>

    <!--
        Prepares some common build directories, updates the project sources and
        initializes some build properties.
    -->
    <target name="prepare" depends="clean, common-rcs-update, init-properties">
        <mkdir dir="${builddir}" />
        <mkdir dir="${tmpdir}" />
        <mkdir dir="${distdir}" />
        <mkdir dir="${logsdir}" />
        <mkdir dir="${builddir}/phpcb" />
        <mkdir dir="${builddir}/coverage" />
    </target>

    <!--
        Automatically creates a repopositoy tag when all tests have passed.
    -->
    <target name="tag" depends="test-is-svn-checkout,tag-if-project-is-svn-checkout" />

    <target name="test-is-svn-checkout">
        <available file="${basedir}/.svn" property="is-svn-checkout" />
    </target>

    <target name="tag-if-project-is-svn-checkout" depends="init-repository-properties" if="is-svn-checkout">
        <property name="tag.repo" value="${repository}/tags" />
        <property name="tag.name" value="${build.name}-${build.version}" />

        <property name="tag.msg" value="# Auto created tag '${build.version}' after successful build." />

        <echo message="svn copy . ${tag.repo}/${tag.name}" />
        <exec dir="${basedir}" executable="svn">
            <arg line="copy -m '${tag.msg}' . ${tag.repo}/${tag.name}" />
        </exec>
    </target>

    <!--
        Initializes some properties based on the source repository.
    -->
    <target name="init-repository-properties" depends="prepare" if="is-svn-checkout">

        <exec executable="svn" dir="${basedir}" output="${builddir}/~svn-info.xml">
            <arg line="info --xml" />
        </exec>

        <xmlproperty file="${builddir}/~svn-info.xml"
                     keepRoot="true"
                     collapseAttributes="true" />

        <property name="repository" value="${info.entry.repository.root}" />
    </target>

    <!--
        Initializes some properties required for automatic tagging
    -->
    <target name="init-tag-properties" if="is-svn-checkout">
        <tstamp>
            <format property="build.date" pattern="yyyy-MM-dd" />
        </tstamp>
    </target>

</project>
