<?xml version="1.0" encoding="UTF-8" ?>
<project name="ant-build-commons-verify" basedir="..">

    <description>
        This is ant file contains targets for different static analysis and
        quality checks used for the project source.
    </description>

    <!--
        Declare basedir for the verify build file.
    -->
    <dirname property="-verify:basedir" file="${ant.file.ant-build-commons-verify}" />

    <!--
        Import the parent target file.
    -->
    <import file="integration-test.xml" />

    <!--
        Import utilized extensions
    -->
    <import file="exts/codesniffer.xml" />
    <import file="exts/pdepend.xml" />
    <import file="exts/phpcpd.xml" />
    <import file="exts/phploc.xml" />
    <import file="exts/phpmd.xml" />

    <!--
        Shortcut for "verify:verify"
    -->
    <target name="verify"
            depends="verify:verify"
            description="->  Verifies that the source is valid and meets quality criterias." />

    <!--
        Main target of this build file. Verifies that the source is valid and
        meets quality criterias.
    -->
    <target name="verify:verify" depends="integration-test, -verify" />

    <!--
        Internal verify implementation that defines the main workflow of the
        verify target.
    -->
    <target name="-verify"
            depends="-verify-before~hook,
                     -verify:verify,
                     -verify-after~hook" />

    <!--
        Hook target that will be called before the main verification phase
        of the project's source starts.
    -->
    <target name="-verify-before~hook" />

    <!--
        Hook target that will be called after the main verification phase
        of the project's source has finished.
    -->
    <target name="-verify-after~hook" />

    <!--
        This target calls several quality tools parallel and generates the
        different reports.
    -->
    <target name="-verify:verify">
        <parallel>
            <antcall target="-verify:coverage" />
            <antcall target="-verify:checkstyle" />
            <antcall target="-verify:phpcpd" />
            <antcall target="-verify:phploc" />
            <sequential>
                <antcall target="-verify:pdepend" />
                <antcall target="-verify:phpmd" />
            </sequential>
        </parallel>
    </target>

    <!--
        Executes all project tests and collects
    -->
    <target name="-verify:coverage">
        <exec dir="${basedir}" failonerror="true" executable="phpunit">
            <arg value="--coverage-html" />
            <arg value="${builddir}/coverage" />
            <arg value="--coverage-clover" />
            <arg value="${logsdir}/clover.xml" />
            <arg value="--log-junit" />
            <arg value="${logsdir}/junit.xml" />
            <arg value="${phpunit.testsuite.class}" />
            <arg value="${php.basedir.test}/${phpunit.testsuite.file}" />
        </exec>
    </target>

    <!--
        Validates that the project code is compatible with the project's coding
        conventions.
    -->
    <target name="-verify:checkstyle" depends="codesniffer:codesniffer" />

    <!--
        Executes PHPMD and analyzes the project source for violations and
        bad practices.
    -->
    <target name="-verify:phpmd" depends="phpmd:phpmd" />

    <target name="-verify:pdepend" depends="pdepend:pdepend" />

    <target name="-verify:phpcpd" depends="phpcpd:phpcpd" />
    <target name="-verify:phploc" depends="phploc:phploc" />

</project>
