<?xml version="1.0" encoding="UTF-8"?>
<project name="ant-build-commons-extensions-pdepend" basedir=".">

    <!--
        Import default properties for this extension.
    -->
    <property file="${resourcedir}/extensions/pdepend/pdepend.properties" />

    <!--
        Import utilized extensions
    -->
    <import file="enabled.xml" />
    <import file="availability.xml" />
    <import file="pear.xml" />

    <!--
        Shortcut for the "pdepend:pdepend" target
    -->
    <target name="pdepend" depends="pdepend:pdepend" />

    <!--
         Execute the pdepend task only, if a php source directory is available
    -->
    <target name="pdepend:pdepend"
            depends="availability:php-srcdir-is-available"
            if="availability:php-srcdir-is-available">
        <common.enabled.antcall target="-pdepend:pdepend"
                                property="pdepend.enabled" />
    </target>

    <!--
        Runs the pdepend cli tool against the project source code.
    -->
    <target name="-pdepend:pdepend"
            depends="-pdepend:before~hook,
                     -pdepend:run,
                     -pdepend:after~hook" />

    <target name="-pdepend:run"
            depends="-pdepend:install-or-upgrade,
                     -pdepend:phpunit-log">

        <exec executable="${commons.executable.php}" failonerror="${pdepend.fail.on.violation}">
            <arg value="-d" />
            <arg value="memory_limit=1024M" />
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.local.bindir}/pdepend" />
            <arg value="--summary-xml=${commons:logsdir}/${pdepend.summary.logfile}" />
            <arg value="--jdepend-xml=${commons:logsdir}/${pdepend.jdepend.logfile}" />
            <arg line="${-pdepend:phpunit.log}" />
            <arg value="${commons.srcdir.php}" />
        </exec>
    </target>

    <!--
        Tests if the deprecated phpunit compatible log file format is activated
        and sets an internal property to a cli argument, so that PHP_Depend
        generates that file.
    -->
    <target name="-pdepend:phpunit-log">
        <condition property="-pdepend:phpunit.log"
                   value=""
                   else="'--phpunit-xml=${commons:logsdir}/${pdepend.phpunit.logfile}'">
            <or>
                <equals arg1="${pdepend.enable.phpunit.compatible.log}"
                        arg2="$${pdepend.enable.phpunit.compatible.log}"
                        trim="true" />
                <isfalse value="${pdepend.enable.phpunit.compatible.log}" />
            </or>
        </condition>
    </target>

    <target name="-pdepend:install-or-upgrade"
            depends="-pdepend:is-installed,
                     -pdepend:install,
                     -pdepend:upgrade" />

    <target name="-pdepend:install" unless="-pdepend:out-installed">
        <antcall target="pear:install">
            <param name="in.pear.package.name"    value="${pdepend.package.name}" />
            <param name="in.pear.package.channel" value="${pdepend.package.channel}" />
        </antcall>
    </target>

    <target name="-pdepend:upgrade" if="-pdepend:out-installed">
        <antcall target="pear:upgrade">
            <param name="in.pear.package.name"    value="${pdepend.package.name}" />
            <param name="in.pear.package.channel" value="${pdepend.package.channel}" />
        </antcall>
    </target>

    <target name="-pdepend:is-installed">
        <condition property="-pdepend:out-installed">
            <available file="${pear.local.bindir}/pdepend" />
        </condition>
    </target>

    <extension-point name="-pdepend:before~hook" />
    <extension-point name="-pdepend:after~hook" />

</project>
