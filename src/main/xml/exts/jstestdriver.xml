<?xml version="1.0" encoding="UTF-8"?>
<!--
    This build file contains all targets for the JSTestDriver extension package. So
    that you can use JSTestDriver without any trouble in your project.
-->
<project name="ant-build-commons-extensions-jstestdriver" basedir=".">

    <!--
        Import default properties for this extension.
    -->
    <property file="${resourcedir}/extensions/jstestdriver/jstestdriver.properties" />

    <!--
        Shortcut for the "jstestdriver:jstestdriver" target.
    -->
    <target name="jstestdriver" depends="jstestdriver:jstestdriver" />

    <!--
        This target will run all tests for the current project.

        Parameters:
            ${in.jstestdriver.coverage}     Optional boolean flag that enables the
                                       collection of code coverage data.
            $in.jstestdriver.config}        Path to the configuration fo
                                       JSTestDriver, usually it will be autogenerated.
    -->
    <target name="jstestdriver:jstestdriver">
        <antcall target="-jstestdriver:run">
            <param name="in.jstestdriver.coverage" value="${in.jstestdriver.coverage}" />
            <param name="in.jstestdriver.config"   value="${in.jstestdriver.config}" />
        </antcall>
    </target>

    <!--
        Start JSTestDriver server and browser (blocking)
    -->
    <target name="jstestdriver:server">
        <echo>Starting JSTestDriver server now</echo>
        <java jar="${jstestdriver.runtime}" fork="true">
            <arg value="--verbose" />
            <arg value="--port" />
            <arg value="${jstestdriver.port}" />
            <arg value="--browser" />
            <arg value="${jstestdriver.browser}" />
        </java>
    </target>

    <!--
        This target executes the project's test suite and enables the collection
        of code coverage information.

        Parameters:
            $in.jstestdriver.config}        Path to the configuration fo
                                       JSTestDriver, usually it will be autogenerated.
    -->
    <target name="jstestdriver:coverage">
        <antcall target="-jstestdriver:run">
            <param name="in.jstestdriver.coverage" value="true" />
            <param name="in.jstestdriver.config"   value="${in.jstestdriver.config}" />
        </antcall>
    </target>

    <target name="-jstestdriver:run"
            depends="-jstestdriver:check-testconfig,
                     -jstestdriver:check-server,
                     -jstestdriver:run-testconfig-full,
                     -jstestdriver:run-testconfig-client,
                     -jstestdriver:run-fail" />

    <target name="-jstestdriver:run-testconfig-client"
            if="-jstestdriver:server-running">

        <java
            jar="${jstestdriver.runtime}"
            fork="true"
            failonerror="true">
            <arg value="--config" />
            <arg value="${jstestdriver.config}" />
            <arg value="--tests" />
            <arg value="all" />
        </java>
    </target>

    <target name="-jstestdriver:run-testconfig-full"
            unless="-jstestdriver:server-running">

        <java
            jar="${jstestdriver.runtime}"
            fork="true"
            failonerror="true">
            <arg value="--port" />
            <arg value="${jstestdriver.port}" />
            <arg value="--browser" />
            <arg value="${jstestdriver.browser}" />
            <arg value="--config" />
            <arg value="${jstestdriver.config}" />
            <arg value="--tests" />
            <arg value="all" />
        </java>
    </target>

    <target name="-jstestdriver:check-server">
        <condition property="-jstestdriver:server-running">
            <socket server="localhost" port="${jstestdriver.port}"/>
        </condition>
    </target>

    <target name="-jstestdriver:check-testconfig">
    </target>

    <!--
        This target will fail the build of the  ${jstestdriver.testsuite.file} is
        defined, but the referenced directory does not exist.
    -->
    <target name="-jstestdriver:run-fail">
        <fail message="Cannot locate tests for the given project">
            <condition>
                <and>
                    <not>
                        <equals arg1="${jstestdriver.testsuite.file}" arg2="$${jstestdriver.testsuite.file}" trim="true" />
                    </not>
                    <not>
                        <available file="${commons.testdir.php}/${jstestdriver.testsuite.file}" />
                    </not>
                </and>

            </condition>
        </fail>
    </target>
</project>
