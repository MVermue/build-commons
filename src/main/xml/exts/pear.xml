<?xml version="1.0" encoding="UTF-8"?>
<!--
    This build file contains common targets for handling pear and pear package
    related tasks.
-->
<project name="ant-build-commons-extensions-pear" basedir=".">

    <!--
        Import default settings
    -->
    <property file="${resourcedir}/extensions/pear/pear.properties" />

    <!--
        Defines the default include path for the project's local pear
        installation.
    -->
    <pathconvert property="pear.local.include.path">
        <path path="." />
        <path path="${pear.local.php.dir}" />
    </pathconvert>

    <!--
        This method will initialize a fresh pear root directory
    -->
    <target name="pear:initialize">
        <antcall target="-pear:initialize-or-ignore">
            <param name="-pear:in-root" location="${pear.local.root}" />
            <param name="-pear:in-conf" location="${pear.local.conf}" />
            <param name="-pear:in-state"   value="${pear.local.preferred.state}" />
        </antcall>
    </target>

    <!--
        Parameters:
            ${in.pear.package.name}
            ${in.pear.package.channel}
    -->
    <target name="pear:install" depends="pear:channel-discover">
        <antcall target="-pear:install">
            <param name="-pear:in-conf"      location="${pear.local.conf}" />
            <param name="-pear:in-channel-uri"  value="${in.pear.package.channel}" />
            <param name="-pear:in-package-name" value="${in.pear.package.name}" />
        </antcall>
    </target>

    <!--
        Parameters:
            ${in.pear.package.name}
            ${in.pear.package.channel}
    -->
    <target name="pear:upgrade">
        <antcall target="-pear:upgrade">
            <param name="-pear:in-conf"      location="${pear.local.conf}" />
            <param name="-pear:in-channel-uri"  value="${in.pear.package.channel}" />
            <param name="-pear:in-package-name" value="${in.pear.package.name}" />
        </antcall>
    </target>

    <!--
        This target will discover the given ${in.pear.package.channel} in the
        local pear installation.

        Parameters:
            ${in.pear.package.channel}  Uri of a pear channel.
    -->
    <target name="pear:channel-discover" depends="pear:initialize">
        <antcall target="-pear:channel-discover">
            <param name="-pear:in-channel-uri" value="${in.pear.package.channel}" />
            <param name="-pear:in-conf"     location="${pear.local.conf}" />
        </antcall>
    </target>

    <!--
        Discovers a pear channel specified as parameter.

        Parameters
          ${pear.channel.uri}
    -->
    <target name="common-pear-channel-discover" depends="-common-pear-prepare">
        <antcall target="-pear:channel-discover">
            <param name="-pear:in-channel-uri" value="${pear.channel.uri}" />
            <param name="-pear:in-conf"     location="${common-pear-config}" />
        </antcall>
    </target>

    <!--
        Installs a remote pear package.

        Parameters
          ${pear-package}
    -->
    <target name="common-pear-install-remote" depends="-common-pear-prepare">
        <exec executable="${php.executable}" failonerror="true">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg value="-c" />
            <arg value="${common-pear-config}" />
            <arg value="install" />
            <arg value="--alldeps" />
            <arg value="--nobuild" />
            <arg value="${pear-package}" />
        </exec>
    </target>

    <!--
        Installs a local pear package.

        Parameters
          ${pear-package-pattern}
    -->
    <target name="common-pear-install-local" depends="-common-pear-prepare">
        <apply executable="${php.executable}" failonerror="true">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg value="-c" />
            <arg value="${common-pear-config}" />
            <arg value="install" />
            <arg value="--force" />
            <arg value="--alldeps" />
            <arg value="--nobuild" />
            <fileset dir="${distdir}">
                <include name="*-${build.version.release}.tgz" />
            </fileset>
        </apply>
    </target>

    <!--
        Creates a temporary pear environment and defines a few properties
        required by most pear related targets:

        Properties:
          ${common-pear-base-dir}  The pear root directory.
          ${common-pear-bin-dir}   The pear binary directory.
          ${common-pear-root-dir}  The pear library install directory.
          ${common-pear-config}    The pear configuration file.
    -->
    <target name="-common-pear-prepare"
            depends="-common-pear-prepare-properties,
                     -common-pear-prepare-test-exists,
                     -common-pear-prepare-if-not-exists" />

    <!--
        Defines a few properties required by most pear related targets:

        Properties:
          ${common-pear-base-dir}  The pear root directory.
          ${common-pear-bin-dir}   The pear binary directory.
          ${common-pear-root-dir}  The pear library install directory.
          ${common-pear-config}    The pear configuration file.
    -->
    <target name="-common-pear-prepare-properties">
        <property name="common-pear-base-dir" value="${builddir}/pear" />
        <property name="common-pear-bin-dir" value="${common-pear-base-dir}/pear" />
        <property name="common-pear-root-dir" value="${common-pear-bin-dir}/php" />
        <property name="common-pear-config" value="${common-pear-base-dir}/.pearrc" />
    </target>

    <!--
        Checks if the temporary pear environment already exists. If it exists
        this target will set the ${common-pear-prepare-exists} property.
    -->
    <target name="-common-pear-prepare-test-exists">
        <available file="${common-pear-config}" property="common-pear-prepare-exists" />
    </target>

    <!--
        Creates a temporary pear environment and defines two properties required
        by most pear related targets:
    -->
    <target name="-common-pear-prepare-if-not-exists" unless="common-pear-prepare-exists">
        <antcall target="-pear:initialize">
            <param name="-pear:in-root" location="${common-pear-base-dir}" />
            <param name="-pear:in-conf" location="${common-pear-config}" />
            <param name="-pear:in-state"   value="alpha" />
        </antcall>
    </target>

    <!--
        Initializes an existing local pear installation for the current project
        or it keeos an already existing installation.

        Parameters:
            ${-pear:in-root}   The pear root directory.
            ${-pear:in-conf}   The pear main config file
            ${-pear:in-state}  The preferred package state
    -->
    <target name="-pear:initialize-or-ignore"
            depends="-pear:is-initialized,
                     -pear:initialize" />

    <!--
        Tests if the project related pear installation is already initialized
        and sets the property ${-pear:out-initialized}.

        Parameters:
            ${-pear:in-root} The pear root directory.
            ${-pear:in-conf} The pear main config file

        Defines:
            ${-pear:out-initialized} Will be set if the given pear root directory
                                     and config file already exists.
    -->
    <target name="-pear:is-initialized">
        <condition property="-pear:out-initialized">
            <and>
                <available file="${-pear:in-root}" />
                <available file="${-pear:in-conf}" />
            </and>
        </condition>
    </target>

    <!--
        Initializes an fresh pear root directory.

        Parameters:
            ${-pear:in-root}  The pear root directory.
            ${-pear:in-conf}  The pear main config file
            ${-pear:in-state} The preferred package state
    -->
    <target name="-pear:initialize" unless="-pear:out-initialized">
        <mkdir dir="${-pear:in-root}" />

        <exec executable="${php.executable}" failonerror="true">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg value="config-create" />
            <arg value="${-pear:in-root}" />
            <arg value="${-pear:in-conf}" />
        </exec>

        <exec executable="${php.executable}" failonerror="true">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg line="-c" />
            <arg line="${-pear:in-conf}" />
            <arg line="config-set" />
            <arg line="preferred_state" />
            <arg line="${-pear:in-state}" />
        </exec>

        <exec executable="${php.executable}" failonerror="true">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg line="-c" />
            <arg line="${-pear:in-conf}" />
            <arg line="config-set" />
            <arg line="auto_discover" />
            <arg line="1" />
        </exec>
    </target>

    <!--
        Will discover a pear channel.

        Parameters:
            ${-pear:in-conf}        The pear main configuration file.
            ${-pear:in-channel-uri} The pear channel uri.
    -->
    <target name="-pear:channel-discover">
        <!-- First try to delete a previous discovered channel -->
        <exec executable="${php.executable}">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg line="-c" />
            <arg line="${-pear:in-conf}" />
            <arg line="channel-delete" />
            <arg line="${-pear:in-channel-uri}" />
        </exec>

        <exec executable="${php.executable}">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg line="-c" />
            <arg line="${-pear:in-conf}" />
            <arg line="channel-discover" />
            <arg line="${-pear:in-channel-uri}" />
        </exec>
    </target>

    <!--
        Installs a package with all it's dependencies in the project's local
        pear installation.

        Parameters:
            ${-pear:in-conf}         The pear main configuration file.
            ${-pear:in-channel-uri}  The pear channel uri.
            ${-pear:in-package-name} Name of the pear package with optional version number.
    -->
    <target name="-pear:install">

        <dirname property="d0" file="${-pear:in-conf}" />
        <exec executable="${php.executable}" failonerror="false">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg value="-c" />
            <arg value="${-pear:in-conf}" />
            <arg value="list" />
        </exec>
        <exec executable="${php.executable}" failonerror="false">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg value="-c" />
            <arg value="${-pear:in-conf}" />
            <arg value="config-show" />
        </exec>
        <exec executable="ls" failonerror="false">
            <arg value="-la" />
            <arg value="${d0}" />
        </exec>
        <exec executable="ls" failonerror="false">
            <arg value="-la" />
            <arg value="${d0}/pear" />
        </exec>
        <exec executable="ls" failonerror="false">
            <arg value="-la" />
            <arg value="${d0}/pear/php" />
        </exec>
        <exec executable="php" failonerror="false">
            <arg value="-i" />
        </exec>
        <exec executable="php" failonerror="false">
            <arg value="-m" />
        </exec>

        <exec executable="${php.executable}" failonerror="true">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg value="-c" />
            <arg value="${-pear:in-conf}" />
            <arg value="install" />
            <arg value="--alldeps" />
            <arg value="--nobuild" />
            <arg value="${-pear:in-channel-uri}/${-pear:in-package-name}" />
        </exec>
    </target>

    <!--
        Upgrades an existing pear package in the pear installation of the
        current project.

        Parameters:
            ${-pear:in-conf}         The pear main configuration file.
            ${-pear:in-channel-uri}  The pear channel uri.
            ${-pear:in-package-name} Name of the pear package with optional version number.
    -->
    <target name="-pear:upgrade">
        <exec executable="${php.executable}" failonerror="true">
            <arg value="-d" />
            <arg value="include_path=${pear.local.include.path}" />
            <arg value="${pear.executable}" />
            <arg line="-c" />
            <arg line="${-pear:in-conf}" />
            <arg line="upgrade" />
            <arg line="--alldeps" />
            <arg line="${-pear:in-channel-uri}/${-pear:in-package-name}" />
        </exec>
    </target>

    <!--
        Defines a property with the absolute path that points to the temporary
        pear source dir.

        Defines:
            ${pear.source.path} - Absolute path to the pear source dir.
    -->
    <target name="-pear:define-source-path"
            depends="-common-pear-prepare-properties">

        <property name="pear.source.path" value="${common-pear-root-dir}" />
    </target>

    <!--
        Tests if the pear package format is enabled for this project.
    -->
    <target name="-pear:is-enabled">
        <condition property="-pear:enabled">
            <and>
                <isset property="pear.channel.uri" />
                <not>
                    <equals arg1="pear.example.com" arg2="${pear.channel.uri}" />
                </not>
            </and>
        </condition>
    </target>

</project>
