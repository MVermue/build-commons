<?xml version="1.0" encoding="UTF-8"?>
<project name="ant-build-commons-macros" basedir=".">
    <!--
         Provide an easy way of executing Script using the engines provided by
         build commons.
    -->
    <macrodef name="commons.script">
        <attribute name="language" />
        <attribute name="src" default="" />
        <attribute name="setbeans" default="true" />
        <element name="configuration" implicit="true" optional="true" />
        <text name="sourcecode" />
        <sequential>
            <script language="@{language}"
                    manager="bsf"
                    setbeans="@{setbeans}">
                <classpath>
                    <fileset dir="${commons:basedir}/main/resources/rhino">
                        <include name="**/*.jar" />
                    </fileset>
                </classpath><configuration /><![CDATA[@{sourcecode}]]>
            </script>
        </sequential>
    </macrodef>

    <!--
         Provide an easy way of defining script tasks based on the distributed
         scripting engines.
    -->
    <macrodef name="commons.scriptdef">
        <attribute name="name" />
        <attribute name="language" />
        <element name="configuration" implicit="true" optional="true" />
        <text name="sourcecode" />
        <sequential>
            <scriptdef name="@{name}"
                       language="@{language}" 
                       manager="bsf">
                <classpath>
                    <fileset dir="${commons:basedir}/main/resources/rhino">
                        <include name="**/*.jar" />
                    </fileset>
                </classpath><configuration /><![CDATA[
                @{sourcecode}]]>
            </scriptdef>
        </sequential>
    </macrodef>

    <!--
        Execute all dependencies attached to a certain extension point in
        parallel.  The execution order is not deterministic. All
        registered extensions will be executed in their own ant
        environment.

        This macro is a proof of concept and maybe should be refactored
        into a Java module in the future
    -->
    <commons.scriptdef name="commons.parallel.extension-point"
                       language="javascript">
        <attribute name="target" />
        <![CDATA[
            var targets = project.getTargets();
            var dependencies = targets.get(
                attributes.get("target")
            ).getDependencies();

            var parallel = project.createTask("parallel");
            while(dependencies.hasMoreElements()) {
                (function(dependency) {
                    var target = targets.get(dependency);
                    var task = project.createTask("antcall");
                    task.setTarget(target);
                    parallel.addTask(task);
                })(dependencies.nextElement());

                parallel.perform();
            }
        ]]>
    </commons.scriptdef>
</project>
